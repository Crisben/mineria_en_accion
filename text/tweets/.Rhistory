qnorm(0.95)
qnorm(0.95)*75+1100
qnorm(0.95)*75/10+1100
qnorm(0.95)*75/10+1100
qnorm(0.95)*75/10+1100
ppois(10,lambda=5*3)
qnorm(0.95)*75
ppois(10,lambda=5*3)
n = 9; mean =1100; sddev = 30
mean + c(-1,1) * qt(0.025) * sddev / sqrt(n)
?qt
n = 9; mean =1100; sddev = 30
mean + c(-1,1) * qt(0.025,9) * sddev / sqrt(n)
pbinom(q=3,prob=.5,size=4,lower.tail=TRUE)
1-pbinom(q=3,prob=.5,size=4,lower.tail=TRUE)
setwd("/home/mario/mineria_en_accion/text/tweets")
tweets = read.csv("tweets.csv", stringsAsFactors=FALSE)
str(tweets)
tweets$Negative = as.factor(tweets$Avg <= -1)
table(tweets$Negative)
install.packages("tm")
library(tm)
install.packages("SnowballC")
library(SnowballC)
corpus = Corpus(VectorSource(tweets$Tweet))
corpus
corpus[[1]]
corpus = tm_map(corpus, tolower)
corpus[[1]]
corpus = tm_map(corpus, removePunctuation)
corpus[[1]]
stopwords("english")[1:10]
tm_map(corpus, removeWords, c("apple", stopwords("english")))
corpus = tm_map(corpus, removeWords, c("apple", stopwords("english")))
corpus[[1]]
corpus = tm_map(corpus, stemDocument)
corpus[[1]]
frequencies = DocumentTermMatrix(corpus)
data("crude")
tdm <- TermDocumentMatrix(crude,
control = list(removePunctuation = TRUE,
stopwords = TRUE))
dtm <- DocumentTermMatrix(crude,
control = list(weighting =
function(x)
weightTfIdf(x, normalize =
FALSE),
stopwords = TRUE))
frequencies = DocumentTermMatrix(corpus,
control = list(removePunctuation = TRUE,
stopwords = TRUE))
typeof(crude)
typeof(corpus)
crude[[1]]
typeof(corpus[[1]])
VCorpus(ListSource(corpus))
VCorpus(VectorSource(corpus))
corpus <- VCorpus(VectorSource(corpus))
frequencies = DocumentTermMatrix(corpus)
frequencies
inspect(frequencies[1000:1005,505:515])
findFreqTerms(frequencies, lowfreq=20)
sparse = removeSparseTerms(frequencies, 0.995)
sparse
tweetsSparse = as.data.frame(as.matrix(sparse))
View(tweetsSparse)
View(tweetsSparse)
colnames(tweetsSparse) = make.names(colnames(tweetsSparse))
tweetsSparse$Negative = tweets$Negative
library(caTools)
set.seed(123)
split = sample.split(tweetsSparse$Negative, SplitRatio = 0.7)
trainSparse = subset(tweetsSparse, split==TRUE)
testSparse = subset(tweetsSparse, split==FALSE)
library(rpart)
library(rpart.plot)
install.package("rpart.plot")
install.packages("rpart.plot")
library(rpart)
library(rpart.plot)
tweetCART = rpart(Negative ~ ., data=trainSparse, method="class")
prp(tweetCART)
predictCART = predict(tweetCART, newdata=testSparse, type="class")
table(testSparse$Negative, predictCART)
(294+18)/(294+6+37+18)
table(testSparse$Negative)
300/(300+55)
library(randomForest)
set.seed(123)
tweetRF = randomForest(Negative ~ ., data=trainSparse)
predictRF = predict(tweetRF, newdata=testSparse)
table(testSparse$Negative, predictRF)
(293+21)/(293+7+34+21)
table(testSparse$Negative)
300/(300+55)
(293+21)/(293+7+34+21)
